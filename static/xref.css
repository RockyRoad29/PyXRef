    /* Outer span is just a reference for the inner span */
    th.rotate-45 > span {
      position: relative;
    }
    th.rotate-45 > span > span {
      /* Must remove span from normal flow in order to keep columns from widening */
      position: absolute;
      left: -0.5px;
        /*
          So far only Firefox does subpixel positioning =
            ignored by Opera, Chrome and Safari .
          But they got this right (visually) in the first place.
          This rule puts the rotated span exactly in place for Firefox
          (tested on Linux and Windows July 2010)
        */
      white-space: nowrap;
      -moz-transform: rotate(-65deg) skewX(25deg);
      -o-transform: rotate(-65deg) skewX(25deg);
      -webkit-transform: rotate(-65deg) skewX(25deg);
      -moz-transform-origin: 0% 0%;
      -o-transform-origin: 0% 0%;
      -webkit-transform-origin: 0% 0%;
      padding: 2px 5px;
      height: 23px; /* 1.3 em = 23px in Opera and 23.4 in FFox (1em = 18px) */
      /* If one wants centered text, this is the place to reset it */
      /* From a design point of view it might not be desirable */
      text-align: left;
    }
    th.rotate-45 > span > span > span {
      /* Rotate the text back, so it will be easier to read */
      -moz-transform: skewX(-25deg);
      -o-transform: skewX(-25deg);
      /* Safari and Chrome won't skew back, so the next line is actually redundant right now (checked July 2010 on Linux) */
      -webkit-transform: skewX(-25deg);
    }
    table.rotate-th td {
        min-width: 2em;
    }
    table.rotate-th thead tr {
        height: 20ex;
      background-color: #eedeff;
      color: #352a74;
      /*border: 1px solid #d5a5ff;*/
      /* If one wants centered text, this is the place to reset it */
      /* From a design point of view it might not be desirable */
      text-align: left;
      border: none;
    }

    td.hover-grid {
            background-color: #ffefc1;
    }
    td.ref {
        text-align:center;
    }